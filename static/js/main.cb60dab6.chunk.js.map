{"version":3,"sources":["components/Box.js","hooks/boxesState.js","components/BoxEditor.js","hooks/usePointerEvents.js","components/Boxes1.js","hooks/boxesStateMethods.js","components/Boxes2.js","index.js","App.js"],"names":["Box","_ref","isActive","_ref$box","box","top","left","width","height","text","boxProps","className","style","react_default","a","createElement","initialState","boxes","selectedIndex","editMode","createBoxesAction","createAction","selectBoxAtPointAction","moveBoxAction","setBoxEditModeAction","updateSelectedBoxAction","reducer","handlers","map","Map","_ref2","Object","slicedToArray","ac","handler","toString","state","action","get","type","createReducer","_action$payload","payload","count","Array","fill","v","idx","id","concat","Math","random","objectSpread","_action$payload2","x","y","reduce","foundIndex","x1","x2","y1","y2","_action$payload3","offsetX","offsetY","updatedBox","actionCreator","nonActiveBox","BoxEditor","onBoxModified","cancelEditMode","_useState","useState","_useState2","setText","inputRef","useRef","useEffect","current","focus","setTimeout","select","inputProps","value","onChange","evt","target","onKeyDown","key","preventDefault","onBlur","ref","DOUBLE_TAP_DELAY","getPointerEventData","container","clientX","clientY","_container$getBoundin","getBoundingClientRect","_target$getBoundingCl","usePointerEvents","containerRef","callbackApi","elapsedTime","lastTime","Date","now","thisTime","elapsedTimeKeeper","subjects","pointerDownSubject","Subject","pointerMoveSubject","pointerUpSubject","onPointerDown","useCallback","evtData","setPointerCapture","pointerId","next","editItem","onPointerMove","onPointerUp","onPointerCancel","releasePointerCapture","pointerDownStream","asObservable","pointerMoveStream","pointerUpStream","subscription","pipe","tap","findItem","switchMap","dragItem","takeUntil","dragComplete","subscribe","unsubscribe","Boxes1","_useReducer","useReducer","_useReducer2","_useReducer2$","dispatch","_containerRef$current","_ref3","useMemo","_usePointerEvents","divProps","boxEditorProps","undefined","boxesInitialState","boxesMethods","createBoxes","selectBoxAtPoint","moveBox","setBoxEditMode","updateSelectedBox","Boxes2","_useMethods","useMethods","_useMethods2","_useMethods2$","_useMethods2$2","_useMethods3","ReactDOM","render","hooksType","setHooksType","Number","href","name","defaultChecked","document","getElementById"],"mappings":"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","file":"static/js/main.cb60dab6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport function Box({ isActive, box: { top, left, width, height, text } }) {\r\n  const boxProps = {\r\n    className: \"box\" + (isActive ? \" active\" : \"\"),\r\n    style: {\r\n      top,\r\n      left,\r\n      width,\r\n      height\r\n    }\r\n  };\r\n  return <div {...boxProps}>{text}</div>;\r\n}\r\n","export const boxWidth = 200;\r\nexport const boxHeight = 70;\r\n\r\nexport const initialState = {\r\n  boxes: [],\r\n  selectedIndex: -1,\r\n  editMode: false\r\n};\r\n\r\nexport const createBoxesAction = createAction(\"CREATE_BOXES\");\r\nexport const selectBoxAtPointAction = createAction(\"SELECT_BOX_AT_POINT\");\r\nexport const moveBoxAction = createAction(\"MOVE_BOX\");\r\nexport const setBoxEditModeAction = createAction(\"SET_BOX_EDIT_MODE\");\r\nexport const updateSelectedBoxAction = createAction(\"UPDATE_SELECT_BOX\");\r\n\r\nexport const reducer = createReducer([\r\n  [\r\n    createBoxesAction,\r\n    (state, action) => {\r\n      const { count, width, height } = action.payload;\r\n      const boxes = new Array(count).fill(0).map((v, idx) => ({\r\n        id: `box-${idx + 1}`,\r\n        top: Math.random() * (height - boxHeight),\r\n        left: Math.random() * (width - boxWidth),\r\n        width: boxWidth,\r\n        height: boxHeight,\r\n        text: `Box ${idx + 101}`\r\n      }));\r\n      return { ...state, boxes };\r\n    }\r\n  ],\r\n  [\r\n    selectBoxAtPointAction,\r\n    (state, action) => {\r\n      const { x, y } = action.payload;\r\n      const selectedIndex = state.boxes.reduce((foundIndex, box, idx) => {\r\n        const x1 = box.left;\r\n        const x2 = box.left + box.width;\r\n        const y1 = box.top;\r\n        const y2 = box.top + box.height;\r\n        if (x >= x1 && x <= x2 && y >= y1 && y <= y2) {\r\n          if (foundIndex === -1 || idx === state.selectedIndex) {\r\n            foundIndex = idx;\r\n          }\r\n        }\r\n        return foundIndex;\r\n      }, -1);\r\n      return { ...state, selectedIndex };\r\n    }\r\n  ],\r\n  [\r\n    moveBoxAction,\r\n    (state, action) => {\r\n      const { boxes, selectedIndex } = state;\r\n      if (selectedIndex === -1) {\r\n        return state;\r\n      }\r\n\r\n      const { x, y, offsetX, offsetY } = action.payload;\r\n      const updatedBox = {\r\n        ...boxes[selectedIndex],\r\n        left: x - offsetX,\r\n        top: y - offsetY\r\n      };\r\n      return {\r\n        ...state,\r\n        boxes: boxes.map((box, idx) =>\r\n          idx === selectedIndex ? updatedBox : box\r\n        )\r\n      };\r\n    }\r\n  ],\r\n  [\r\n    setBoxEditModeAction,\r\n    (state, action) => {\r\n      const { editMode } = action.payload;\r\n      return { ...state, editMode };\r\n    }\r\n  ],\r\n  [\r\n    updateSelectedBoxAction,\r\n    (state, action) => {\r\n      const { boxes, selectedIndex } = state;\r\n      if (selectedIndex === -1) {\r\n        return state;\r\n      }\r\n\r\n      const { box: updatedBox } = action.payload;\r\n      return {\r\n        ...state,\r\n        boxes: boxes.map((box, idx) =>\r\n          idx === selectedIndex ? updatedBox : box\r\n        )\r\n      };\r\n    }\r\n  ]\r\n]);\r\n\r\nfunction createAction(type) {\r\n  function actionCreator(payload) {\r\n    return {\r\n      type,\r\n      payload\r\n    };\r\n  }\r\n  actionCreator.toString = () => type;\r\n  return actionCreator;\r\n}\r\n\r\nfunction createReducer(handlers) {\r\n  const map = new Map(\r\n    handlers.map(([ac, handler]) => [ac.toString(), handler])\r\n  );\r\n  return (state, action) => {\r\n    const handler = map.get(action.type) || (() => state);\r\n    return handler(state, action);\r\n  };\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { boxHeight, boxWidth } from \"../hooks/boxesState\";\r\n\r\nconst nonActiveBox = {\r\n  top: 0,\r\n  left: -9999,\r\n  width: boxWidth,\r\n  height: boxHeight\r\n};\r\n\r\nexport function BoxEditor({ box, onBoxModified, cancelEditMode }) {\r\n  const [text, setText] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n  useEffect(() => {\r\n    if (box) {\r\n      inputRef.current.focus();\r\n      setText(box.text);\r\n      setTimeout(() => {\r\n        inputRef.current.select();\r\n      });\r\n    }\r\n  }, [box]);\r\n\r\n  const { top, left, width, height } = box || nonActiveBox;\r\n  const boxProps = {\r\n    className: \"box active editor\",\r\n    style: { top, left, width, height }\r\n  };\r\n  const inputProps = {\r\n    type: \"text\",\r\n    value: text,\r\n    onChange: evt => setText(evt.target.value),\r\n    onKeyDown: evt => {\r\n      if (box) {\r\n        if (evt.key === \"Enter\") {\r\n          evt.preventDefault();\r\n          onBoxModified({ ...box, text });\r\n          cancelEditMode();\r\n        } else if (evt.key === \"Escape\") {\r\n          evt.preventDefault();\r\n          cancelEditMode();\r\n        }\r\n      }\r\n    },\r\n    onBlur: () => {\r\n      if (box) {\r\n        onBoxModified({ ...box, text });\r\n        cancelEditMode();\r\n      }\r\n    },\r\n    ref: inputRef\r\n  };\r\n  return (\r\n    <div {...boxProps}>\r\n      <input {...inputProps} />\r\n    </div>\r\n  );\r\n}\r\n","import { useRef, useEffect, useCallback } from \"react\";\nimport { Subject } from \"rxjs\";\nimport { tap, switchMap, takeUntil } from \"rxjs/operators\";\n\nconst DOUBLE_TAP_DELAY = 300;\n\nfunction elapsedTimeKeeper() {\n  let lastTime = Date.now();\n  return () => {\n    const thisTime = Date.now();\n    const elapsedTime = thisTime - lastTime;\n    lastTime = thisTime;\n    return elapsedTime;\n  };\n}\n\nfunction getPointerEventData(evt, container) {\n  const { clientX, clientY, target } = evt;\n  const { left, top } = container.getBoundingClientRect();\n  const { left: targetLeft, top: targetTop } = target.getBoundingClientRect();\n  const x = clientX - left;\n  const y = clientY - top;\n  const offsetX = clientX - targetLeft;\n  const offsetY = clientY - targetTop;\n  return { x, y, offsetX, offsetY };\n}\n\nexport function usePointerEvents(containerRef, callbackApi) {\n  const elapsedTime = useRef(elapsedTimeKeeper());\n  const subjects = useRef({\n    pointerDownSubject: new Subject(),\n    pointerMoveSubject: new Subject(),\n    pointerUpSubject: new Subject()\n  });\n\n  const onPointerDown = useCallback(\n    evt => {\n      const evtData = getPointerEventData(evt, containerRef.current);\n      if (elapsedTime.current() > DOUBLE_TAP_DELAY) {\n        containerRef.current.setPointerCapture(evt.pointerId);\n        subjects.current.pointerDownSubject.next(evtData);\n      } else {\n        callbackApi.editItem(evtData);\n      }\n    },\n    [containerRef, elapsedTime, callbackApi]\n  );\n  const onPointerMove = useCallback(\n    evt => {\n      const evtData = getPointerEventData(evt, containerRef.current);\n      subjects.current.pointerMoveSubject.next(evtData);\n    },\n    [containerRef]\n  );\n  const onPointerUp = useCallback(\n    evt => {\n      const evtData = getPointerEventData(evt, containerRef.current);\n      subjects.current.pointerUpSubject.next(evtData);\n    },\n    [containerRef]\n  );\n  const onPointerCancel = useCallback(\n    evt => {\n      containerRef.current.releasePointerCapture(evt.pointerId);\n    },\n    [containerRef]\n  );\n\n  useEffect(() => {\n    const pointerDownStream = subjects.current.pointerDownSubject.asObservable();\n    const pointerMoveStream = subjects.current.pointerMoveSubject.asObservable();\n    const pointerUpStream = subjects.current.pointerUpSubject.asObservable();\n\n    const orchestrationStream = pointerDownStream.pipe(\n      tap(evtData => {\n        callbackApi.findItem(evtData);\n      }),\n      switchMap(({ offsetX, offsetY }) => {\n        return pointerMoveStream.pipe(\n          tap(({ x, y }) => {\n            callbackApi.dragItem({ x, y, offsetX, offsetY });\n          }),\n          takeUntil(\n            pointerUpStream.pipe(\n              tap(() => {\n                callbackApi.dragComplete();\n              })\n            )\n          )\n        );\n      })\n    );\n\n    const subscription = orchestrationStream.subscribe();\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [callbackApi]);\n\n  return {\n    onPointerDown,\n    onPointerMove,\n    onPointerUp,\n    onPointerCancel\n  };\n}\n","import React, {\n  useRef,\n  useEffect,\n  useReducer,\n  useCallback,\n  useMemo\n} from \"react\";\nimport { Box } from \"./Box\";\nimport { BoxEditor } from \"./BoxEditor\";\nimport { usePointerEvents } from \"../hooks/usePointerEvents\";\nimport {\n  createBoxesAction,\n  initialState,\n  reducer,\n  setBoxEditModeAction,\n  selectBoxAtPointAction,\n  moveBoxAction,\n  updateSelectedBoxAction\n} from \"../hooks/boxesState\";\n\nimport \"./Boxes.css\";\n\nexport function Boxes1() {\n  const [{ boxes, selectedIndex, editMode }, dispatch] = useReducer(\n    reducer,\n    initialState\n  );\n\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    const count = 10;\n    const { width, height } = containerRef.current.getBoundingClientRect();\n    dispatch(createBoxesAction({ width, height, count }));\n  }, []);\n\n  const editItem = useCallback(({ x, y }) => {\n    dispatch(selectBoxAtPointAction({ x, y }));\n    dispatch(setBoxEditModeAction({ editMode: true }));\n  }, []);\n  const findItem = useCallback(({ x, y }) => {\n    dispatch(selectBoxAtPointAction({ x, y }));\n  }, []);\n  const dragItem = useCallback(({ x, y, offsetX, offsetY }) => {\n    dispatch(moveBoxAction({ x, y, offsetX, offsetY }));\n  }, []);\n  const dragComplete = useCallback(() => {}, []);\n  const callbackApi = useMemo(\n    () => ({\n      editItem,\n      findItem,\n      dragItem,\n      dragComplete\n    }),\n    [editItem, findItem, dragItem, dragComplete]\n  );\n\n  const {\n    onPointerDown,\n    onPointerMove,\n    onPointerUp,\n    onPointerCancel\n  } = usePointerEvents(containerRef, callbackApi);\n\n  const divProps = {\n    className: \"boxes\",\n    ref: containerRef,\n    onPointerDown,\n    onPointerMove,\n    onPointerUp,\n    onPointerCancel\n  };\n\n  const boxEditorProps = {\n    box: editMode ? boxes[selectedIndex] : undefined,\n    onBoxModified: box => {\n      dispatch(updateSelectedBoxAction({ box }));\n    },\n    cancelEditMode: () => {\n      dispatch(setBoxEditModeAction({ editMode: false }));\n    }\n  };\n\n  return (\n    <div {...divProps}>\n      <BoxEditor {...boxEditorProps} />\n      {boxes.map((box, idx) => (\n        <Box key={box.id} box={box} isActive={idx === selectedIndex} />\n      ))}\n    </div>\n  );\n}\n","export const boxWidth = 200;\nexport const boxHeight = 70;\n\nexport const boxesInitialState = {\n  boxes: [],\n  selectedIndex: -1,\n  editMode: false\n};\n\nexport const boxesMethods = state => ({\n  createBoxes({ count, width, height }) {\n    state.boxes = new Array(count).fill(0).map((v, idx) => ({\n      id: `box-${idx + 1}`,\n      top: Math.random() * (height - boxHeight),\n      left: Math.random() * (width - boxWidth),\n      width: boxWidth,\n      height: boxHeight,\n      text: `Box ${idx + 101}`\n    }));\n  },\n  selectBoxAtPoint({ x, y }) {\n    state.selectedIndex = state.boxes.reduce((foundIndex, box, idx) => {\n      const x1 = box.left;\n      const x2 = box.left + box.width;\n      const y1 = box.top;\n      const y2 = box.top + box.height;\n      if (x >= x1 && x <= x2 && y >= y1 && y <= y2) {\n        if (foundIndex === -1 || idx === state.selectedIndex) {\n          foundIndex = idx;\n        }\n      }\n      return foundIndex;\n    }, -1);\n  },\n  moveBox({ x, y, offsetX, offsetY }) {\n    const { boxes, selectedIndex } = state;\n    if (selectedIndex !== -1) {\n      boxes[selectedIndex].left = x - offsetX;\n      boxes[selectedIndex].top = y - offsetY;\n    }\n  },\n  setBoxEditMode(editMode) {\n    state.editMode = editMode;\n  },\n  updateSelectedBox(box) {\n    const { boxes, selectedIndex } = state;\n    if (selectedIndex !== -1) {\n      boxes[selectedIndex] = box;\n    }\n  }\n});\n","import React, { useRef, useEffect } from \"react\";\nimport { Box } from \"./Box\";\nimport { BoxEditor } from \"./BoxEditor\";\nimport { usePointerEvents } from \"../hooks/usePointerEvents\";\nimport { boxesInitialState, boxesMethods } from \"../hooks/boxesStateMethods\";\nimport useMethods from \"use-methods\";\n\nimport \"./Boxes.css\";\n\nexport function Boxes2() {\n  const [\n    { boxes, selectedIndex, editMode },\n    {\n      createBoxes,\n      selectBoxAtPoint,\n      moveBox,\n      setBoxEditMode,\n      updateSelectedBox\n    }\n  ] = useMethods(boxesMethods, boxesInitialState);\n\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    const count = 10;\n    const { width, height } = containerRef.current.getBoundingClientRect();\n    createBoxes({ width, height, count });\n  }, [createBoxes]);\n\n  const [, callbackApi] = useMethods(\n    state => ({\n      editItem({ x, y }) {\n        selectBoxAtPoint({ x, y });\n        setBoxEditMode(true);\n      },\n      findItem: selectBoxAtPoint,\n      dragItem: moveBox,\n      dragComplete() {}\n    }),\n    {}\n  );\n\n  const {\n    onPointerDown,\n    onPointerMove,\n    onPointerUp,\n    onPointerCancel\n  } = usePointerEvents(containerRef, callbackApi);\n\n  const divProps = {\n    className: \"boxes\",\n    ref: containerRef,\n    onPointerDown,\n    onPointerMove,\n    onPointerUp,\n    onPointerCancel\n  };\n\n  const boxEditorProps = {\n    box: editMode ? boxes[selectedIndex] : undefined,\n    onBoxModified: box => {\n      updateSelectedBox(box);\n    },\n    cancelEditMode: () => {\n      setBoxEditMode(false);\n    }\n  };\n\n  return (\n    <div {...divProps}>\n      <BoxEditor {...boxEditorProps} />\n      {boxes.map((box, idx) => (\n        <Box key={box.id} box={box} isActive={idx === selectedIndex} />\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./App\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","import React, { useState, useCallback } from \"react\";\nimport { Boxes1 } from \"./components/Boxes1\";\nimport { Boxes2 } from \"./components/Boxes2\";\nimport \"./App.css\";\n\nexport function App() {\n  const [hooksType, setHooksType] = useState(1);\n  const onChange = useCallback(\n    evt => {\n      setHooksType(Number(evt.target.value));\n    },\n    [setHooksType]\n  );\n  const boxes = hooksType === 1 ? <Boxes1 /> : <Boxes2 />;\n\n  return (\n    <div className=\"App\">\n      <div>\n        <h2>React Mouse/Touch Events Demo</h2>\n        <p>\n          Source:\n          <a href=\"https://github.com/dfbaskin/react-mouse-touch-events\">\n            https://github.com/dfbaskin/react-mouse-touch-events\n          </a>\n        </p>\n        <p onChange={onChange}>\n          <label>\n            <input type=\"radio\" name=\"hooks-type\" value={1} defaultChecked />{\" \"}\n            Standard Hooks\n          </label>\n          <label>\n            <input type=\"radio\" name=\"hooks-type\" value={2} /> useMethods\n          </label>\n        </p>\n      </div>\n      <div>{boxes}</div>\n    </div>\n  );\n}\n"],"sourceRoot":""}